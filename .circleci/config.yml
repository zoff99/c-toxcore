---
version: 2

workflows:
  version: 2
  clang-sanitizers:
    jobs:
      - build

jobs:
  build:
    working_directory: ~/work
    #machine:
    #  image: circleci/classic:latest
    docker:
      - image: ubuntu:bionic

    steps:
      - run: &apt_install
          apt update &&
          apt install -y --no-install-recommends
            clang
            cmake
            libconfig-dev
            libgtest-dev
            llvm-dev
            ninja-build
            pkg-config
            zip grep file ca-certificates autotools-dev autoconf automake
            git bc wget rsync cmake make pkg-config yasm libtool
            libasound2-dev libv4l-dev ssh gzip tar
            coreutils

      - run: echo 'StrictHostKeyChecking no' >> ~/.ssh/config
      - run:
          name: SSH debug
          command: |
             echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' >> $SSH_CONFIG_DIR/known_hosts
             ssh -vvvT git@github.com
      - checkout

      # circleCI checkout fix
      #- run: wget "https://raw.githubusercontent.com/zoff99/ToxAndroidRefImpl/zoff99/dev003/.circleci/checkout_fix.sh" -O /tmp/c.sh
      #- run: bash /tmp/c.sh

      - restore_cache:
          key: ctc-library-dependencies-v3-{{ .Branch }}

      - run: mkdir -p ~/work/deploy
      - run: if [ -e build_dir ]; then export oo="cache" ; else export oo="" ; fi ; mkdir -p build_dir ; cd build_dir ; pwd ; ls -al ; bash ../circle_scripts/deps.sh "$oo"
      - run: cd build_dir ; bash ../circle_scripts/ctoxcore.sh '../'

      - save_cache:
          paths: [ "~/work/build_dir" ]
          key: ctc-library-dependencies-v3-{{ .Branch }}
